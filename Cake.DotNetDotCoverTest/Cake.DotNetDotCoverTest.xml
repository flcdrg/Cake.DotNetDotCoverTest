<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.DotNetDotCoverTest</name>
    </assembly>
    <members>
        <member name="T:Cake.DotNetDotCoverTest.Aliases">
            <summary>
            <para>Contains functionality related to <see href="https://github.com/dotnet/cli">.NET Core CLI</see>.</para>
            <para>
            In order to use the commands for this alias, the .Net Core CLI tools will need to be installed on the machine where
            the Cake script is being executed.  See this <see href="https://www.microsoft.com/net/core">page</see> for information
            on how to install.
            </para>
            </summary>
        </member>
        <member name="M:Cake.DotNetDotCoverTest.Aliases.DotNetCoreDotCoverTest(Cake.Core.ICakeContext)">
            <summary>
            Test project.
            </summary>
            <param name="context">The context.</param>
            <example>
            <code>
                DotNetCoreDotCoverTest();
            </code>
            </example>
        </member>
        <member name="M:Cake.DotNetDotCoverTest.Aliases.DotNetCoreDotCoverTest(Cake.Core.ICakeContext,System.String)">
            <summary>
            Test project with path.
            </summary>
            <param name="context">The context.</param>
            <param name="project">The project path.</param>
            <example>
            <para>Specify the path to the .csproj file in the test project</para>
            <code>
                DotNetCoreDotCoverTest("./test/Project.Tests/Project.Tests.csproj");
            </code>
            <para>You could also specify a task that runs multiple test projects.</para>
            <para>Cake task:</para>
            <code>
            Task("Test")
                .Does(() =>
            {
                var projectFiles = GetFiles("./test/**/*.csproj");
                foreach(var file in projectFiles)
                {
                    DotNetCoreDotCoverTest(file.FullPath);
                }
            });
            </code>
            <para>If your test project is using project.json, the project parameter should just be the directory path.</para>
            <code>
                DotNetCoreDotCoverTest("./test/Project.Tests/");
            </code>
            </example>
        </member>
        <member name="M:Cake.DotNetDotCoverTest.Aliases.DotNetCoreDotCoverTest(Cake.Core.ICakeContext,System.String,Cake.Common.Tools.DotNetCore.Test.DotNetCoreTestSettings)">
             <summary>
             Test project with settings.
             </summary>
             <param name="context">The context.</param>
             <param name="project">The project path.</param>
             <param name="settings">The settings.</param>
             <example>
             <code>
                 var settings = new DotNetCoreDotCoverTestSettings
                 {
                     Configuration = "Release"
                 };
            
                 DotNetCoreDotCoverTest("./test/Project.Tests/Project.Tests.csproj", settings);
             </code>
             <para>You could also specify a task that runs multiple test projects.</para>
             <para>Cake task:</para>
             <code>
             Task("Test")
                 .Does(() =>
             {
                 var settings = new DotNetCoreDotCoverTestSettings
                 {
                     Configuration = "Release"
                 };
            
                 var projectFiles = GetFiles("./test/**/*.csproj");
                 foreach(var file in projectFiles)
                 {
                     DotNetCoreDotCoverTest(file.FullPath, settings);
                 }
             });
             </code>
             <para>If your test project is using project.json, the project parameter should just be the directory path.</para>
             <code>
                 var settings = new DotNetCoreDotCoverTestSettings
                 {
                     Configuration = "Release"
                 };
            
                 DotNetCoreDotCoverTest("./test/Project.Tests/", settings);
             </code>
             </example>
        </member>
        <member name="T:Cake.DotNetDotCoverTest.DotNetCoreDotCoverTestSettings">
            <summary>
            
            </summary>
        </member>
        <member name="T:Cake.DotNetDotCoverTest.DotNetCoreDotCoverTestTester">
            <summary>
            .NET Core project tester with dotCover
            </summary>
        </member>
        <member name="M:Cake.DotNetDotCoverTest.DotNetCoreDotCoverTestTester.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.DotNetDotCoverTest.DotNetCoreDotCoverTestTester" /> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tool locator.</param>
        </member>
        <member name="M:Cake.DotNetDotCoverTest.DotNetCoreDotCoverTestTester.Test(System.String,Cake.Common.Tools.DotNetCore.Test.DotNetCoreTestSettings,Cake.DotNetDotCoverTest.DotNetCoreDotCoverTestSettings)">
            <summary>
            Tests the project using the specified path with arguments and settings.
            </summary>
            <param name="project">The target project path.</param>
            <param name="settings">The settings.</param>
            <param name="dotCoverSettings"></param>
        </member>
    </members>
</doc>
